apply from: "$rootDir/gradle/common.gradle"

dependencies {
    compile project(':ix-commons-microservices-defaults-live')
    compile project(':ix-commons-microservices-defaults-webapp')
    compile project(':ix-commons-logging-async')
    runtime "com.newrelic.agent.java:newrelic-agent:$newRelicVersion"
    runtime "org.graylog2.log4j2:log4j2-gelf:$log4j2GelfVersion"
    compile 'org.jolokia:jolokia-core:1.3.5'
    compile("org.springframework.cloud:spring-cloud-starter-config:$springCloudVersion") {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compile("org.springframework.retry:spring-retry:$springRetryVersion") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.springframework', module: 'spring-core'
    }
    compile("org.springframework.boot:spring-boot-starter-aop:$springBootVersion") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    compile 'com.typesafe:config:1.3.4'
    compile "io.opentracing:opentracing-api:$openTracingVersion"
    compile "io.opentracing:opentracing-util:$openTracingVersion"
    compile "io.jaegertracing:jaeger-core:$jaegerVersion"
    runtime "io.jaegertracing:jaeger-client:$jaegerVersion"

    annotationProcessor project(':ix-commons-async-processor')
    annotationProcessor project(':ix-commons-microservices-scslcodegen')

    testCompile project(':ix-commons-microservices-defaults-context')
    testCompile project(':ix-commons-spring-test')
    testCompile project(':ix-commons-multitenancy-test')
    testCompile project(':ix-commons-jooq-test')
    testCompile 'com.github.tomakehurst:wiremock-jre8:2.26.3'

    testAnnotationProcessor project(':ix-commons-async-processor')
    testAnnotationProcessor project(':ix-commons-microservices-scslcodegen')
}
