<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <properties>
        <db.schemaname>jqgen-${project.artifactId}</db.schemaname>
        <db.driver>com.mysql.cj.jdbc.Driver</db.driver>
        <db.protocol>jdbc:mysql://</db.protocol>
        <db.host>localhost:13306</db.host>
        <db.params>?autoReconnect=true&amp;verifyServerCertificate=false&amp;useSSL=true&amp;useUniCode=true&amp;characterEncoding=UTF-8</db.params>
        <db.username>root</db.username>
        <db.password>root</db.password>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>package-from-artifactid</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>project.package.part</name>
                            <value>${project.groupId}.${project.artifactId}</value>
                            <regex>-</regex>
                            <replacement>.</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>package-expand-ixaris</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>project.package.part</name>
                            <value>${project.package.part}</value>
                            <regex>^(.*)\.oss\.ix\.(.*)$</regex>
                            <replacement>$1.$2</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-generated-test-sources</id>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-test-sources/jooq</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    <driver>${db.driver}</driver>
                    <url>${db.protocol}${db.host}${db.params}</url>
                    <username>${db.username}</username>
                    <password>${db.password}</password>
                </configuration>
                <executions>
                    <execution>
                        <id>create-schema</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <sqlCommand>CREATE DATABASE IF NOT EXISTS `${db.schemaname}`;</sqlCommand>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-test-schema</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <sqlCommand>CREATE DATABASE IF NOT EXISTS `${db.schemaname}`;</sqlCommand>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>@mysql-connector.version@</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>@flyway.version@</version>
                <executions>
                    <execution>
                        <id>migrate-schema</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>clean</goal>
                            <goal>migrate</goal>
                        </goals>
                        <configuration>
                            <driver>${db.driver}</driver>
                            <url>${db.protocol}${db.host}/${db.schemaname}${db.params}</url>
                            <user>${db.username}</user>
                            <password>${db.password}</password>
                            <schema>${db.schemaname}</schema>
                            <locations>
                                <!-- filesystem: prefix for Flyway to look in filesystem rather than only on the classpath -->
                                <location>filesystem:src/main/resources/lib/migration</location>
                            </locations>
                        </configuration>
                    </execution>
                    <execution>
                        <id>migrate-test-schema</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>clean</goal>
                            <goal>migrate</goal>
                        </goals>
                        <configuration>
                            <driver>${db.driver}</driver>
                            <url>${db.protocol}${db.host}/${db.schemaname}${db.params}</url>
                            <user>${db.username}</user>
                            <password>${db.password}</password>
                            <schema>${db.schemaname}</schema>
                            <locations>
                                <!-- filesystem: prefix for Flyway to look in filesystem rather than only on the classpath -->
                                <location>filesystem:src/test/resources/db/migration</location>
                            </locations>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>@mysql-connector.version@</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>@jooq.version@</version>
                <executions>
                    <execution>
                        <id>generate-schema</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <jdbc>
                                <driver>${db.driver}</driver>
                                <url>${db.protocol}${db.host}${db.params}</url>
                                <user>${db.username}</user>
                                <password>${db.password}</password>
                            </jdbc>
                            <generator>
                                <database>
                                    <name>org.jooq.meta.mysql.MySQLDatabase</name>
                                    <inputSchema>${db.schemaname}</inputSchema>
                                    <outputSchemaToDefault>true</outputSchemaToDefault>
                                    <includes>lib_[^.]*|.*?\.lib_.*\..*</includes>
                                    <excludes>schema_version|flyway_.*|__.*</excludes>
                                    <includeExcludeColumns>true</includeExcludeColumns>
                                    <overridePrimaryKeys>.*pk_.*</overridePrimaryKeys>
                                    <recordTimestampFields>last_updated</recordTimestampFields>
                                    <recordVersionFields>update_version</recordVersionFields>
                                    <forcedTypes>
                                        <forcedType>
                                            <userType>java.lang.Character</userType>
                                            <converter>com.ixaris.commons.jooq.persistence.CharacterConverter</converter>
                                            <includeTypes>(?i)CHAR\(1\)</includeTypes>
                                        </forcedType>
                                        <forcedType>
                                            <name>BOOLEAN</name>
                                            <includeTypes>(?i)TINYINT\s*UNSIGNED(\(\d*\))?</includeTypes>
                                        </forcedType>
                                        <forcedType>
                                            <name>INTEGER</name>
                                            <includeTypes>(?i)SMALLINT(\s*UNSIGNED)?(\(\d*\))?</includeTypes>
                                        </forcedType>
                                        <forcedType>
                                            <userType>java.lang.String</userType>
                                            <converter>com.ixaris.commons.jooq.persistence.JsonConverter</converter>
                                            <includeTypes>(?i)JSON</includeTypes>
                                        </forcedType>
                                    </forcedTypes>
                                </database>
                                <target>
                                    <packageName>${project.package.part}.jooq</packageName>
                                    <directory>target/generated-sources/jooq</directory>
                                </target>
                            </generator>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-test-schema</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <jdbc>
                                <driver>${db.driver}</driver>
                                <url>${db.protocol}${db.host}${db.params}</url>
                                <user>${db.username}</user>
                                <password>${db.password}</password>
                            </jdbc>
                            <generator>
                                <database>
                                    <name>org.jooq.meta.mysql.MySQLDatabase</name>
                                    <inputSchema>${db.schemaname}</inputSchema>
                                    <outputSchemaToDefault>true</outputSchemaToDefault>
                                    <includes>.*</includes>
                                    <excludes>lib_.*|schema_version|flyway_.*|__.*</excludes>
                                    <includeExcludeColumns>true</includeExcludeColumns>
                                    <overridePrimaryKeys>.*pk_.*</overridePrimaryKeys>
                                    <recordTimestampFields>last_updated</recordTimestampFields>
                                    <recordVersionFields>update_version</recordVersionFields>
                                    <forcedTypes>
                                        <forcedType>
                                            <userType>java.lang.Character</userType>
                                            <converter>com.ixaris.commons.jooq.persistence.CharacterConverter</converter>
                                            <includeTypes>(?i)CHAR\(1\)</includeTypes>
                                        </forcedType>
                                        <forcedType>
                                            <name>BOOLEAN</name>
                                            <includeTypes>(?i)TINYINT\s*UNSIGNED(\(\d*\))?</includeTypes>
                                        </forcedType>
                                        <forcedType>
                                            <name>INTEGER</name>
                                            <includeTypes>(?i)SMALLINT(\s*UNSIGNED)?(\(\d*\))?</includeTypes>
                                        </forcedType>
                                        <forcedType>
                                            <userType>java.lang.String</userType>
                                            <converter>com.ixaris.commons.jooq.persistence.JsonConverter</converter>
                                            <includeTypes>(?i)JSON</includeTypes>
                                        </forcedType>
                                    </forcedTypes>
                                </database>
                                <target>
                                    <packageName>${project.package.part}.test.jooq</packageName>
                                    <directory>target/generated-test-sources/jooq</directory>
                                </target>
                            </generator>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>@mysql-connector.version@</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>