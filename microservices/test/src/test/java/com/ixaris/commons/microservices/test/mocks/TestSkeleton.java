// Generated by the ixaris microservices protocol buffer compiler. DO NOT EDIT!
// source: core_auth_sessions_api.proto

package com.ixaris.commons.microservices.test.mocks;

import com.ixaris.commons.microservices.lib.common.Nil;
import com.ixaris.commons.microservices.lib.common.ServiceOperationHeader;
import com.ixaris.commons.microservices.lib.common.annotations.ServiceApi;
import com.ixaris.commons.microservices.lib.service.ServiceOperation;
import com.ixaris.commons.microservices.lib.service.ServiceResponseWrapper;
import com.ixaris.commons.microservices.lib.service.ServiceSkeleton;
import com.ixaris.commons.microservices.test.example.TestData.Context;

@ServiceApi(TestResource.NAME)
public interface TestSkeleton extends ServiceSkeleton {
    
    @Override
    default TestResource resource() {
        return (TestResource) this;
    }
    
    class Operation extends ServiceOperation<Context, Nil, Nil, Nil> {
        
        public Operation(final ServiceOperationHeader<Context> header,
                         final ServiceResponseWrapper<Nil, Nil> responseWrapper,
                         final ServiceOperationAroundAsync aroundAsync) {
            super(header, null, responseWrapper, aroundAsync);
        }
        
    }
    
    interface NestedSkeleton {
        
        class Operation extends ServiceOperation<Context, Nil, Nil, Nil> {
            
            public Operation(final ServiceOperationHeader<Context> header,
                             final ServiceResponseWrapper<Nil, Nil> responseWrapper,
                             final ServiceOperationAroundAsync aroundAsync) {
                super(header, Nil.getInstance(), responseWrapper, aroundAsync);
            }
            
        }
        
        interface NestedIdSkeleton {
            
            class Operation extends ServiceOperation<Context, Nil, Nil, Nil> {
                
                public final long nestedId;
                
                public Operation(final long nestedId,
                                 final ServiceOperationHeader<Context> header,
                                 final ServiceResponseWrapper<Nil, Nil> responseWrapper,
                                 final ServiceOperationAroundAsync aroundAsync) {
                    super(header, Nil.getInstance(), responseWrapper, aroundAsync);
                    this.nestedId = nestedId;
                }
                
            }
            
            interface MoreNestedSkeleton {
                
                class Operation extends ServiceOperation<Context, Nil, Nil, Nil> {
                    
                    public final long nestedId;
                    
                    public Operation(final long nestedId,
                                     final ServiceOperationHeader<Context> header,
                                     final ServiceResponseWrapper<Nil, Nil> responseWrapper,
                                     final ServiceOperationAroundAsync aroundAsync) {
                        super(header, Nil.getInstance(), responseWrapper, aroundAsync);
                        this.nestedId = nestedId;
                    }
                    
                }
                
                interface MoreNestedIdSkeleton {
                    
                    class Operation extends ServiceOperation<Context, Nil, Nil, Nil> {
                        
                        public final long nestedId;
                        public final long moreNestedId;
                        
                        public Operation(final long nestedId,
                                         final long moreNestedId,
                                         final ServiceOperationHeader<Context> header,
                                         final ServiceResponseWrapper<Nil, Nil> responseWrapper,
                                         final ServiceOperationAroundAsync aroundAsync) {
                            super(header, Nil.getInstance(), responseWrapper, aroundAsync);
                            this.nestedId = nestedId;
                            this.moreNestedId = moreNestedId;
                        }
                        
                    }
                    
                    class OtherOperation extends ServiceOperation<Context, Nil, Nil, Nil> {
                        
                        public final long nestedId;
                        public final long moreNestedId;
                        
                        public OtherOperation(final long nestedId,
                                              final long moreNestedId,
                                              final ServiceOperationHeader<Context> header,
                                              final ServiceResponseWrapper<Nil, Nil> responseWrapper,
                                              final ServiceOperationAroundAsync aroundAsync) {
                            super(header, Nil.getInstance(), responseWrapper, aroundAsync);
                            this.nestedId = nestedId;
                            this.moreNestedId = moreNestedId;
                        }
                        
                    }
                    
                }
                
            }
            
        }
        
    }
    
}
